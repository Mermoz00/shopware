<?php

namespace Shopware\Proxies\__CG__\Shopware\Models\Country;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Country extends \Shopware\Models\Country\Country implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'area', 'states', 'attribute', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'id', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'name', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'iso', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'isoName', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'position', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'description', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'taxFree', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'taxFreeUstId', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'taxFreeUstIdChecked', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'active', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'iso3', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'displayStateInRegistration', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'forceStateInRegistration', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'allowShipping', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'payments', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'areaId'];
        }

        return ['__isInitialized__', 'area', 'states', 'attribute', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'id', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'name', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'iso', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'isoName', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'position', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'description', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'taxFree', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'taxFreeUstId', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'taxFreeUstIdChecked', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'active', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'iso3', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'displayStateInRegistration', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'forceStateInRegistration', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'allowShipping', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'payments', '' . "\0" . 'Shopware\\Models\\Country\\Country' . "\0" . 'areaId'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Country $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setIso($iso)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIso', [$iso]);

        return parent::setIso($iso);
    }

    /**
     * {@inheritDoc}
     */
    public function getIso()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIso', []);

        return parent::getIso();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsoName($isoName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsoName', [$isoName]);

        return parent::setIsoName($isoName);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsoName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsoName', []);

        return parent::getIsoName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxFree($taxFree)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxFree', [$taxFree]);

        return parent::setTaxFree($taxFree);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxFree()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxFree', []);

        return parent::getTaxFree();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxFreeUstId($taxFreeUstId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxFreeUstId', [$taxFreeUstId]);

        return parent::setTaxFreeUstId($taxFreeUstId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxFreeUstId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxFreeUstId', []);

        return parent::getTaxFreeUstId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxFreeUstIdChecked($taxFreeUstIdChecked)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxFreeUstIdChecked', [$taxFreeUstIdChecked]);

        return parent::setTaxFreeUstIdChecked($taxFreeUstIdChecked);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxFreeUstIdChecked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxFreeUstIdChecked', []);

        return parent::getTaxFreeUstIdChecked();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setIso3($iso3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIso3', [$iso3]);

        return parent::setIso3($iso3);
    }

    /**
     * {@inheritDoc}
     */
    public function getIso3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIso3', []);

        return parent::getIso3();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttribute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttribute', []);

        return parent::getAttribute();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttribute($attribute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttribute', [$attribute]);

        return parent::setAttribute($attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function getStates()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStates', []);

        return parent::getStates();
    }

    /**
     * {@inheritDoc}
     */
    public function setStates($states)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStates', [$states]);

        return parent::setStates($states);
    }

    /**
     * {@inheritDoc}
     */
    public function getArea()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArea', []);

        return parent::getArea();
    }

    /**
     * {@inheritDoc}
     */
    public function setArea($area)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArea', [$area]);

        return parent::setArea($area);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayments', []);

        return parent::getPayments();
    }

    /**
     * {@inheritDoc}
     */
    public function setPayments($payments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayments', [$payments]);

        return parent::setPayments($payments);
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayStateInRegistration($displayStateInRegistration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayStateInRegistration', [$displayStateInRegistration]);

        return parent::setDisplayStateInRegistration($displayStateInRegistration);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayStateInRegistration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayStateInRegistration', []);

        return parent::getDisplayStateInRegistration();
    }

    /**
     * {@inheritDoc}
     */
    public function setForceStateInRegistration($forceStateInRegistration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForceStateInRegistration', [$forceStateInRegistration]);

        return parent::setForceStateInRegistration($forceStateInRegistration);
    }

    /**
     * {@inheritDoc}
     */
    public function getForceStateInRegistration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForceStateInRegistration', []);

        return parent::getForceStateInRegistration();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowShipping($allowShipping)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowShipping', [$allowShipping]);

        return parent::setAllowShipping($allowShipping);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowShipping()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowShipping', []);

        return parent::getAllowShipping();
    }

    /**
     * {@inheritDoc}
     */
    public function fromArray(array $array = array (
), array $fillable = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fromArray', [$array, $fillable]);

        return parent::fromArray($array, $fillable);
    }

    /**
     * {@inheritDoc}
     */
    public function setOneToOne($data, $model, $property, $reference = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOneToOne', [$data, $model, $property, $reference]);

        return parent::setOneToOne($data, $model, $property, $reference);
    }

    /**
     * {@inheritDoc}
     */
    public function setOneToMany($data, $model, $property, $reference = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOneToMany', [$data, $model, $property, $reference]);

        return parent::setOneToMany($data, $model, $property, $reference);
    }

    /**
     * {@inheritDoc}
     */
    public function setManyToOne($data, $model, $property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManyToOne', [$data, $model, $property]);

        return parent::setManyToOne($data, $model, $property);
    }

}
